# –ù–æ–≤–∏–∫–æ–≤ –ù–∏–∫–∏—Ç–∞

from tkinter import ttk, messagebox, END
from database import add_student, get_all_students, update_student, delete_student


class StudentManager:
    def __init__(self, master):
        self.master = master
        master.title("üéì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏")

        self.name_label = ttk.Label(master, text="–ò–º—è:")
        self.name_label.grid(row=0, column=0, padx=5, pady=5, sticky='w')
        self.name_entry = ttk.Entry(master, width=30)
        self.name_entry.grid(row=0, column=1, padx=5, pady=5)

        self.email_label = ttk.Label(master, text="Email:")
        self.email_label.grid(row=1, column=0, padx=5, pady=5, sticky='w')
        self.email_entry = ttk.Entry(master, width=30)
        self.email_entry.grid(row=1, column=1, padx=5, pady=5)

        self.add_button = ttk.Button(master, text="–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ ‚ûï", command=self.add_student_gui)
        self.add_button.grid(row=2, column=0, columnspan=2, padx=5, pady=5, sticky='ew')

        self.update_button = ttk.Button(master, text="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ üîÑ", command=self.update_student_gui)
        self.update_button.grid(row=3, column=0, columnspan=2, padx=5, pady=5, sticky='ew')

        self.delete_button = ttk.Button(master, text="–£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ üóëÔ∏è", command=self.delete_student_gui)
        self.delete_button.grid(row=4, column=0, columnspan=2, padx=5, pady=5, sticky='ew')

        self.view_button = ttk.Button(master, text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö üëÄ", command=self.show_all_students)
        self.view_button.grid(row=5, column=0, columnspan=2, padx=5, pady=5, sticky='ew')

        self.tree = ttk.Treeview(master, columns=('ID', '–ò–º—è', 'Email'), show='headings')
        self.tree.heading('ID', text='ID')
        self.tree.heading('–ò–º—è', text='–ò–º—è')
        self.tree.heading('Email', text='Email')
        self.tree.column('ID', width=50, anchor='center')
        self.tree.grid(row=6, column=0, columnspan=2, padx=5, pady=5, sticky='nsew')

        master.grid_rowconfigure(6, weight=1)
        master.grid_columnconfigure(0, weight=1)
        master.grid_columnconfigure(1, weight=1)

        self.show_all_students()

    def add_student_gui(self):
        name = self.name_entry.get().strip()
        email = self.email_entry.get().strip()
        if name and email:
            try:
                add_student(name, email)
                self.show_all_students()
                self.name_entry.delete(0, END)
                self.email_entry.delete(0, END)
                messagebox.showinfo("‚úÖ –£—Å–ø–µ—Ö", "–°—Ç—É–¥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
            except ValueError as e:
                messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", str(e))
        else:
            messagebox.showwarning("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!")

    def show_all_students(self):
        for item in self.tree.get_children():
            self.tree.delete(item)
        students = get_all_students()
        for student in students:
            self.tree.insert('', 'end', values=student)

    def select_student(self):
        selected_item = self.tree.selection()
        if not selected_item:
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞")
            return None
        return self.tree.item(selected_item[0], 'values')

    def update_student_gui(self):
        student = self.select_student()
        if student:
            name = self.name_entry.get().strip()
            email = self.email_entry.get().strip()
            if name and email:
                update_student(student[0], name, email)
                self.show_all_students()
                self.name_entry.delete(0, END)
                self.email_entry.delete(0, END)
                messagebox.showinfo("‚úÖ –£—Å–ø–µ—Ö", "–î–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
            else:
                messagebox.showwarning("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!")

    def delete_student_gui(self):
        student = self.select_student()
        if student:
            if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", f"–£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ '{student[1]}'?"):
                delete_student(student[0])
                self.show_all_students()
                self.name_entry.delete(0, END)
                self.email_entry.delete(0, END)
                messagebox.showinfo("‚úÖ –£—Å–ø–µ—Ö", "–°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω!")
